.cms:build:
  stage: build
  script:
    - export CMS_VERSION=$(cat cms/package.json | jq -r .version)
    - export DOCKER_CLIENT_TIMEOUT=120
    - export COMPOSE_HTTP_TIMEOUT=120
    - docker login -u gitlab-ci-token -p "${CI_BUILD_TOKEN}" ${DOCKER_REGISTRY_DOMAIN}
    - docker-compose build
      --build-arg API_ENDPOINT=https://${CMS_DOMAIN}/api
      e2w-cms
    - docker-compose push e2w-cms
  dependencies: []
  tags:
    - docker

# .cms:test:
#   stage: test
#   script:
#     - cd cms
#     - cp configs.template.js configs.js
#     - npm install
#     - npm run test
#   cache:
#     paths:
#       - cms/node_modules
#   dependencies: []
#   tags:
#     - node
#     - test

.cms:deploy:
  stage: deploy
  script:
    - eval `ssh-agent -s`
    - mkdir ${DOCKER_CERT_PATH}
    - echo "${DOCKER_CA}" > ${DOCKER_CERT_PATH}/ca.pem
    - echo "${DOCKER_CERT}" > ${DOCKER_CERT_PATH}/cert.pem
    - echo "${DOCKER_KEY}" > ${DOCKER_CERT_PATH}/key.pem
    - docker login -u ${DOCKER_REGISTRY_USER} -p "${DOCKER_REGISTRY_PASSWORD}" ${DOCKER_REGISTRY_DOMAIN}
    - export CMS_VERSION=$(cat cms/package.json | jq -r .version)
    - docker pull ${DOCKER_REGISTRY_DOMAIN}/e2w-cms:${CMS_VERSION}${IMAGE_SUFFIX}
    - docker-compose up -d --force-recreate e2w-cms
    - rm -rf ${DOCKER_CERT_PATH}
  tags:
    - docker
    - e2w

.cms:only-changes:
  only:
    changes:
      - ci/cms.yml
      - cms/**/**
    